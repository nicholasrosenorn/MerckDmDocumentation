[
["creation-of-dummy-data.html", "Chapter 5 Creation of Dummy Data 5.1 Why do we need dummy data? 5.2 How we generated dummy data? 5.3 How to run the scripts? 5.4 Potential improvements", " Chapter 5 Creation of Dummy Data 5.1 Why do we need dummy data? In order to effectively test the functionality of the backend code, a lot of pre-existing data is needed to fill the database to simulate a normal functioning environment for the app. Initially, we only had about 40 users’ data, and it was not enough. Therefore, we decided to create fake user data based on pre-existing user data (dummy data). 5.2 How we generated dummy data? In order to let dummy data make sense and follow pre-existing data’s patterns, we studied the patterns of each pre-existing data category. There are active, basal, dist, elev, heart, and steps data. We mostly used user 185 and 186’s dataset as the reference while creating dummy dataset. For the active data, we first calculated the mean value of the original data. Then we found out the number of data points above the mean. Because it can be observed that within each active data set, data points above the mean value cluster into three group, and one of them always starts at the beginning. Therefore, we also chose the start as the position of the first high value data cluster, and randomly chose position for the other two. The value of each data point was chosen based on the observed range of the reference data point. The result of fake data vs. real data graph can be found below: For other data categories, we utilized similar approaches while ajusting parameters and the possible range of random number generation based on each data categories’ own characteristics. Below are the fake data vs. real data comparison graphs for other data categories. For basal data: For Dist data: For Elev data: For Heart data: For Steps data: 5.3 How to run the scripts? In order to run the scripts, some modifications to the GenerateFakeData.py are needed. There are three parameters that need modification: folder_name_list, real_name_list, and path. “folder_name_list” tells the name of the folders that will contain the dummy data. “real_name_list” tells the name of the reference files being used to generate dummy data. “path” is the current directory. Once these three parameters are set up correctly, just directly run the GenerateFakeData.py script with no input. 5.4 Potential improvements Because our dummy data generation script is specifically modified for each data set, if in the future a new type of data appears, we need to rewrite our code in order to accommodate the new data type. Therefore, we can improve our code by applying more statictical knowledge so that the code can be applied to generate dummy data from more different data types. "]
]
